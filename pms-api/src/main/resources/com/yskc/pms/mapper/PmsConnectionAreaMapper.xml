<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yskc.pms.mapper.PmsConnectionAreaMapper" >
  <resultMap id="BaseResultMap" type="com.yskc.pms.entity.PmsConnectionArea" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="illegal" property="illegal" jdbcType="TINYINT" />
    <result column="illegal_context" property="illegalContext" jdbcType="VARCHAR" />
    <result column="illegal_count" property="illegalCount" jdbcType="INTEGER" />
    <result column="operation" property="operation" jdbcType="TINYINT" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_account, illegal, illegal_context, illegal_count, operation, operator, create_time, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yskc.pms.entity.PmsConnectionAreaExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms_connection_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pms_connection_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pms_connection_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yskc.pms.entity.PmsConnectionAreaExample" >
    delete from pms_connection_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yskc.pms.entity.PmsConnectionArea" >
    insert into pms_connection_area (id, user_account, illegal, 
      illegal_context, illegal_count, operation, 
      operator, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{illegal,jdbcType=TINYINT}, 
      #{illegalContext,jdbcType=VARCHAR}, #{illegalCount,jdbcType=INTEGER}, #{operation,jdbcType=TINYINT}, 
      #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yskc.pms.entity.PmsConnectionArea" >
    insert into pms_connection_area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="illegal != null" >
        illegal,
      </if>
      <if test="illegalContext != null" >
        illegal_context,
      </if>
      <if test="illegalCount != null" >
        illegal_count,
      </if>
      <if test="operation != null" >
        operation,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="illegal != null" >
        #{illegal,jdbcType=TINYINT},
      </if>
      <if test="illegalContext != null" >
        #{illegalContext,jdbcType=VARCHAR},
      </if>
      <if test="illegalCount != null" >
        #{illegalCount,jdbcType=INTEGER},
      </if>
      <if test="operation != null" >
        #{operation,jdbcType=TINYINT},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yskc.pms.entity.PmsConnectionAreaExample" resultType="java.lang.Integer" >
    select count(*) from pms_connection_area
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pms_connection_area
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userAccount != null" >
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.illegal != null" >
        illegal = #{record.illegal,jdbcType=TINYINT},
      </if>
      <if test="record.illegalContext != null" >
        illegal_context = #{record.illegalContext,jdbcType=VARCHAR},
      </if>
      <if test="record.illegalCount != null" >
        illegal_count = #{record.illegalCount,jdbcType=INTEGER},
      </if>
      <if test="record.operation != null" >
        operation = #{record.operation,jdbcType=TINYINT},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pms_connection_area
    set id = #{record.id,jdbcType=INTEGER},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      illegal = #{record.illegal,jdbcType=TINYINT},
      illegal_context = #{record.illegalContext,jdbcType=VARCHAR},
      illegal_count = #{record.illegalCount,jdbcType=INTEGER},
      operation = #{record.operation,jdbcType=TINYINT},
      operator = #{record.operator,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yskc.pms.entity.PmsConnectionArea" >
    update pms_connection_area
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="illegal != null" >
        illegal = #{illegal,jdbcType=TINYINT},
      </if>
      <if test="illegalContext != null" >
        illegal_context = #{illegalContext,jdbcType=VARCHAR},
      </if>
      <if test="illegalCount != null" >
        illegal_count = #{illegalCount,jdbcType=INTEGER},
      </if>
      <if test="operation != null" >
        operation = #{operation,jdbcType=TINYINT},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yskc.pms.entity.PmsConnectionArea" >
    update pms_connection_area
    set user_account = #{userAccount,jdbcType=VARCHAR},
      illegal = #{illegal,jdbcType=TINYINT},
      illegal_context = #{illegalContext,jdbcType=VARCHAR},
      illegal_count = #{illegalCount,jdbcType=INTEGER},
      operation = #{operation,jdbcType=TINYINT},
      operator = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>